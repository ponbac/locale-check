name: build

on:
  push:
    tags: ["v*.*.*"]

jobs:
  build-win-linux:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Run tests
        run: cargo test --verbose

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get -y install gcc-mingw-w64-x86-64 gcc-mingw-w64-i686
          rustup target add x86_64-pc-windows-gnu
          rustup target add i686-pc-windows-gnu
          rustup target add x86_64-unknown-linux-gnu

          mkdir dist
          mkdir builds

      - name: Build Win64
        run: |
          cargo rustc --bin ramilang --release --target=x86_64-pc-windows-gnu -- -C linker=x86_64-w64-mingw32-gcc
          mkdir builds/ramilang-win64
          cp target/x86_64-pc-windows-gnu/release/ramilang.exe builds/ramilang-win64
          tar -C builds -czvf dist/ramilang-win64.tar.gz ramilang-win64

      - name: Build Win32
        run: |
          cargo rustc --bin ramilang --release --target=i686-pc-windows-gnu -- -C linker=i686-w64-mingw32-gcc -C link-args=-mwindows -C panic=abort
          mkdir builds/ramilang-win32
          cp target/i686-pc-windows-gnu/release/ramilang.exe builds/ramilang-win32
          tar -C builds -czvf dist/ramilang-win32.tar.gz ramilang-win32

      - name: Build Linux
        run: |
          cargo rustc --bin ramilang --release --target=x86_64-unknown-linux-gnu
          mkdir builds/ramilang-linux
          cp target/x86_64-unknown-linux-gnu/release/ramilang builds/ramilang-linux
          tar -C builds -czvf dist/ramilang-linux.tar.gz ramilang-linux

      - name: Upload release
        uses: softprops/action-gh-release@v1
        with:
          body_path: CHANGELOG.md
          files: |
            dist/ramilang-win64.tar.gz
            dist/ramilang-win32.tar.gz
            dist/ramilang-linux.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-mac:
      runs-on: macos-latest

      steps:
        - name: Checkout
          uses: actions/checkout@v3

        - name: Install dependencies
          run: |
            rustup target add x86_64-apple-darwin
            rustup target add aarch64-apple-darwin

            mkdir dist
            mkdir builds

        - name: Build
          run: |
            cargo build --release --target x86_64-apple-darwin
            mkdir builds/ramilang-macos-x86_64
            cp target/x86_64-apple-darwin/release/ramilang builds/ramilang-macos-x86_64
            tar -C builds -czvf dist/ramilang-macos-x86_64.tar.gz ramilang-macos-x86_64

            cargo build --release --target aarch64-apple-darwin
            mkdir builds/ramilang-macos-aarch64
            cp target/aarch64-apple-darwin/release/ramilang builds/ramilang-macos-aarch64
            tar -C builds -czvf dist/ramilang-macos-aarch64.tar.gz ramilang-macos-aarch64
          
        - name: Upload release
          uses: softprops/action-gh-release@v1
          with:
            body_path: CHANGELOG.md
            files: |
              dist/ramilang-macos-x86_64.tar.gz
              dist/ramilang-macos-aarch64.tar.gz
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
  npm-publish:
      needs: [build-win-linux, build-mac]
      runs-on: ubuntu-latest

      steps:
        - name: Checkout
          uses: actions/checkout@v3
        
        - name: Publish npm package
          env:
            NPM_ACCESS_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}
          run: |
            echo "//registry.npmjs.org/:_authToken=$NPM_ACCESS_TOKEN" > ".npmrc"
            npm publish 